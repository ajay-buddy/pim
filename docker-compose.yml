version: '3.7'

services:
  main:
    container_name: main
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 4000:3000
      - 9229:9229
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - redis
      - postgres
      - redisnotification
  redis:
    container_name: redis
    image: redis:5
    ports:
      - 6380:6379
    networks:
      - webnet
  redisnotification:
    container_name: redisnotification
    image: redis:5
    # command: [
    #     "redis-server",
    #     "--bind",
    #     "redis",
    #     "--port",
    #     "6379"
    # ]
    networks:
      - webnet
    ports:
      - 6379:6379
  postgres:
    container_name: postgres
    image: postgres
    networks:
      - webnet
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: productmanagement
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432
    volumes:
      - data:/var/lib/postgresql/data
networks:
  webnet:
volumes:
  data:
